(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),o=(n(0),n(137)),c={id:"singleAction",title:"Single Action Example",sidebar_label:"Single Action Example"},i={unversionedId:"singleAction",id:"singleAction",isDocsHomePage:!1,title:"Single Action Example",description:"Example: Create and deploy a project with a single action",source:"@site/docs/single-action-example.md",slug:"/singleAction",permalink:"/docs/docs/singleAction",editUrl:"https://github.com/nimbella/docs/edit/master/docs/single-action-example.md",version:"current",sidebar_label:"Single Action Example",sidebar:"someSidebar",previous:{title:"Deployer Feature",permalink:"/docs/docs/deployerFeature"},next:{title:"Tieing Namespaces to Projects",permalink:"/docs/docs/namespaceToProjects"}},l=[{value:"Example: Create and deploy a project with a single action",id:"example-create-and-deploy-a-project-with-a-single-action",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"example-create-and-deploy-a-project-with-a-single-action"},"Example: Create and deploy a project with a single action"),Object(o.b)("p",null,"Let\u2019s start with a really simple example that shows the basics of creating the source code for an action, placing it in a directory structure for a project, and deploying the project. This project needs no configuration and creates actions automatically based on the project directory structure."),Object(o.b)("p",null,"In the simplest implementation of a project, each action corresponds to a single source file. In this example:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("inlineCode",{parentName:"li"},"Hello World")," print function is placed in a file named ",Object(o.b)("em",{parentName:"li"},"hello.js"),"."),Object(o.b)("li",{parentName:"ul"},"A project named ",Object(o.b)("inlineCode",{parentName:"li"},"example1")," is created and deployed to your namespace.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"To create and deploy a project to print Hello World (simplest form):")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"> nim project create example1\n> nim project deploy example1\nDeploying project '/path/to/example1'\n  to namespace '...'\n  on host 'https://...nimbella.io'\nDeployment status recorded in 'example1/.nimbella'\n\nDeployed actions:\n  - hello\n> nim action invoke hello\n{\n  \"greeting\": \"Hello stranger!\"\n}\n")),Object(o.b)("p",null,"So, what just happened?  As a result, of ",Object(o.b)("inlineCode",{parentName:"p"},"nim project create"),", ",Object(o.b)("inlineCode",{parentName:"p"},"nim")," generated a project and added a sample to it called ",Object(o.b)("inlineCode",{parentName:"p"},"hello.js"),".  Specifically, in your current directory, it created"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"example1/packages/default/hello.js\nexample1/web\n")),Object(o.b)("p",null,"We address the purpose of the ",Object(o.b)("inlineCode",{parentName:"p"},"web")," directory in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/docs/webContent"}),"Adding static web content")," and the ",Object(o.b)("inlineCode",{parentName:"p"},"packages")," directory later in this section."),Object(o.b)("p",null,"As a result of ",Object(o.b)("inlineCode",{parentName:"p"},"nim project deploy"),", the project was deployed to your namespace and the result was an action called ",Object(o.b)("inlineCode",{parentName:"p"},"hello"),".  To record the status of that deployment, ",Object(o.b)("inlineCode",{parentName:"p"},"nim")," created"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"example1/.nimbella/...\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"nim action invoke")," step invoked the just-deployed action."),Object(o.b)("p",null,"THe ",Object(o.b)("inlineCode",{parentName:"p"},"nim project create")," command has some other features that will come up in other examples.  But, ",Object(o.b)("inlineCode",{parentName:"p"},"nim project create")," is only a convenience."),Object(o.b)("p",null,"To make the process less magical and more hands-on, remove the entire ",Object(o.b)("inlineCode",{parentName:"p"},"example1")," from your local filesystem and let's start over, without using ",Object(o.b)("inlineCode",{parentName:"p"},"nim project create"),", emphasizing that a Nimbella project, no matter how it is created and modified, is just an area in your local file system."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Create and deploy a project to print Hello World (more manually):")),Object(o.b)("p",null,"(1) Create ",Object(o.b)("em",{parentName:"p"},"hello.js")," with the following code:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-nodejs"}),"function main(args) { return { msg: 'Hello World' } }\n")),Object(o.b)("p",null,"(2) Create a project directory with the following command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"> mkdir -p example1/packages/demo\n")),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/docs/projects"}),"project directory structure")," sets the name of the project (",Object(o.b)("inlineCode",{parentName:"p"},"example1"),"), a ",Object(o.b)("em",{parentName:"p"},"packages")," directory, and the package qualifier (",Object(o.b)("inlineCode",{parentName:"p"},"demo"),").  There is no ",Object(o.b)("inlineCode",{parentName:"p"},"web")," directory this time; ",Object(o.b)("inlineCode",{parentName:"p"},"web")," is not required if you aren't adding web content."),Object(o.b)("p",null,"(3) Copy the JavaScript file into the ",Object(o.b)("inlineCode",{parentName:"p"},"demo")," directory with the following command."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"> cp hello.js example1/packages/demo\n")),Object(o.b)("p",null,"(4) Deploy the project."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"> nim project deploy example1\nDeploying project '/path/to/example1'\n  to namespace '...'\n  on host 'https://...nimbella.io'\n\nDeployed actions:\n  - demo/hello\n")),Object(o.b)("p",null,"(5)  Invoke the deployed action."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'> nim action invoke demo/hello\n{\n  "msg": "Hello World"\n}\n')),Object(o.b)("p",null,"Here\u2019s a diagram of the project structure that was created in this procedure."),Object(o.b)("center",{id:"fig2"},Object(o.b)("img",{src:"./fig2-nim-example1-project-directory-structure.svg",height:"300"})),Object(o.b)("center",null,"**Figure 1: Directory structure of the example1 project**"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Notes:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"project deploy")," command activates the deployer, which names the action automatically based on the source code file (",Object(o.b)("inlineCode",{parentName:"li"},"hello"),"), prepended by the package qualifier (",Object(o.b)("inlineCode",{parentName:"li"},"demo"),")."),Object(o.b)("li",{parentName:"ul"},"If you want an action to have a simple name (no package qualification), put it in a package directory called ",Object(o.b)("em",{parentName:"li"},"default"),". In that case, no package qualifier is prepended. See ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/projects"}),"Project Directory Structure"),".  When ",Object(o.b)("inlineCode",{parentName:"li"},"nim")," generates a sample in ",Object(o.b)("inlineCode",{parentName:"li"},"nim project create")," it uses this feature."),Object(o.b)("li",{parentName:"ul"},"The correct runtime for the source code file is determined according to the file suffix.  The command ",Object(o.b)("inlineCode",{parentName:"li"},"nim info --runtimes")," will list the supported runtimes.  At this time, the list does not include file suffixes.  See ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/deployerFeature#nimbella-deployer-supported-runtimes-for-actions"}),"Nimbella Deployer Supported Runtimes for Actions")," for a list that includes suffixes."),Object(o.b)("li",{parentName:"ul"},"Project configuration occurs automatically when it can, but see ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/configuration"}),"Adding Project Configuration")," for complex projects.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Next steps:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"To add web content to your project, see ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/webContent"}),"Adding static web content"),"."),Object(o.b)("li",{parentName:"ul"},"If you need to add build steps, see ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/building"}),"Incorporating build steps for actions and web content"),"."),Object(o.b)("li",{parentName:"ul"},"Read more about ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/docs/deployerFeature"}),"deploying projects"),"."),Object(o.b)("li",{parentName:"ul"},"Look at a somewhat more complex ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/nimbella/demo-projects/tree/master/qrcode"}),"example QR code project with both an action and static web content"),".")))}b.isMDXComponent=!0},137:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),m=a,u=s["".concat(c,".").concat(m)]||s[m]||d[m]||o;return n?r.a.createElement(u,i(i({ref:t},p),{},{components:n})):r.a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);